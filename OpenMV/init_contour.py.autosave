# Init Contour - By: Arjan Waraich - Fri Jul 18 2025

import sensor
import time
# import sys 
import pyb  # USB_VCP

#import image

## Constants:
    # # Frame size: QVGA = 320x240 pixels
    # Width: 320 pixels
    # Height: 240 pixels


    # # Center point: (160, 120) (div // 2)

    # GRANTED This parameter is set: sensor.set_framesize(sensor.QVGA)



red_threshold = (30, 70, 20, 127, 20, 127)

sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.skip_frames(time=2000)
sensor.set_auto_gain(False)
sensor.set_auto_whitebal(False)

clock = time.clock()

# USB Virtual COM port for serial communication
usb = pyb.USB_VCP()

while True:
    clock.tick()
    img = sensor.snapshot()

    blobs = img.find_blobs([red_threshold], pixels_threshold=150, area_threshold=150, merge=True)

    if blobs:
        target = max(blobs, key=lambda b: b.pixels())

        img.draw_rectangle(target.rect(), color=(255, 0, 0))
        img.draw_cross(target.cx(), target.cy(), color=(0, 255, 0))

        frame_center_x = img.width() // 2
        frame_center_y = img.height() // 2

        dx = target.cx() - frame_center_x
        dy = target.cy() - frame_center_y

        # Read data if available
        if usb.any():
            serial_input = usb.read()  # Read all available bytes
            if serial_input:
                print("Serial input:", serial_input)

        img.draw_string(0, 0, "dx:%d dy:%d" % (dx, dy), mono_space=True)

    else:
        img.draw_string(0, 0, "No target", mono_space=True)
